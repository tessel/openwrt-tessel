include $(TOPDIR)/rules.mk

PKG_NAME:=node
PKG_VERSION:=v6.5.0
# TODO : remove patch 010-node_6_5_0_uclib_execinfo.patch after 6.5.0
PKG_RELEASE:=1

PKG_SOURCE:=node-$(PKG_VERSION).tar.gz
PKG_SOURCE_URL:=https://nodejs.org/dist/${PKG_VERSION}/
PKG_SHA256SUM:=d7742558bb3331e41510d6e6f1f7b13c0527aecc00a63c3e05fcfd44427ff778

PKG_BUILD_PARALLEL:=1
PKG_BUILD_DEPENDS:=

# libicu way
# PKG_BUILD_DEPENDS:=+libicu

include $(INCLUDE_DIR)/host-build.mk
include $(INCLUDE_DIR)/package.mk

# libicu way
# TARGET_CFLAGS += -I$(STAGING_DIR)/include

define Package/node
  DEPENDS:=+libpthread +librt +libstdcpp +libopenssl +zlib
# libicu way
#  DEPENDS:=+libpthread +librt +libstdcpp +libopenssl +zlib +libicu
  SUBMENU:=Node
  SECTION:=lang
  CATEGORY:=Languages
  TITLE:=Node is a JavaScript runtime built on Chrome's V8 JavaScript engine
  URL:=https://nodejs.org/
endef

define Package/node/description
Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine
endef

define Package/npm
  DEPENDS:=+node
  SUBMENU:=Node.js
  SECTION:=lang
  CATEGORY:=Languages
  TITLE:=Node/io.js Package Manager
  URL:=https://npmjs.org/
endef

ifeq ($(ARCH),i386)
  DEST_CPU=ia32
else
  DEST_CPU=$(ARCH)
endif


CONFIGURE_ARGS = --dest-cpu=$(DEST_CPU) --dest-os=linux \
  --shared-openssl --shared-openssl-includes="$(STAGING_DIR)/usr/include" --shared-openssl-libpath="$(STAGING_DIR)/usr/lib" \
  --shared-zlib --shared-zlib-includes="$(STAGING_DIR)/usr/include" --shared-zlib-libpath="$(STAGING_DIR)/usr/lib" \
  --v8-options="--max_old_space_size=20 --initial_old_space_size=4 --max_semi_space_size=2 --max_executable_size=5" \
  --without-snapshot

ifeq ($(ARCH),mipsel)
  CONFIGURE_ARGS += \
   --with-mips-arch-variant=r2 --with-mips-fpu-mode=fp32 --with-mips-float-abi=soft --without-intl
# libicu way
#   --with-mips-arch-variant=r2 --with-mips-fpu-mode=fp32 --with-mips-float-abi=soft --with-intl=system-icu
endif

# host env way
# MY_HOST_CONF_ARGS =
# ifeq ($(HOST_ARCH),x86_64)
# 	MY_HOST_CONF_ARGS = CXX_host="g++ -m32" CC_host="gcc -m32" LINK_host="g++ -m32"
# else
# 	MY_HOST_CONF_ARGS = CXX_host="g++" CC_host="gcc" LINK_host="g++"
# endif
#
# define Build/Compile
# 	$(call Build/Compile/Default, $(MY_HOST_CONF_ARGS))
# endef

define Package/node/install
	mkdir -p $(1)/usr/bin
	$(INSTALL_BIN) $(PKG_BUILD_DIR)/out/Release/node $(1)/usr/bin/node
endef

define Package/npm/install
	mkdir -p $(1)/usr/lib/node_modules
	$(CP) $(PKG_BUILD_DIR)/deps/npm $(1)/usr/lib/node_modules
	ln -sf /usr/lib/node_modules/npm/bin/npm-cli.js $(1)/usr/bin/npm
endef

$(eval $(call HostBuild))
$(eval $(call BuildPackage,node))
$(eval $(call BuildPackage,npm))
